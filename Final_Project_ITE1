using System;
using System.Collections.Generic;
using System.Linq;

namespace FINAL_PROJECT_ITE1

class Student
{
    public string StudentNumber { get; set; }
    public string Surname { get; set; }
    public string FirstName { get; set; }
    public string Occupation { get; set; }
    public char Gender { get; set; }
    public int CountryCode { get; set; }
    public int AreaCode { get; set; }
    public string PhoneNumber { get; set; }


 public override string ToString()
    {
        return $"{Surname}, {FirstName}, with student number {StudentNumber}, is a {Occupation.ToLower()}. " +
               $"The given phone number is {CountryCode}-{AreaCode}-{PhoneNumber}";
    }
}
class ASEANPhonebook
{
    private List<Student> students;

    public ASEANPhonebook()
    {
        students = new List<Student>();
    }

    public void AddStudent(Student student)
    {
        students.Add(student);
    }

    public Student GetStudentByNumber(string studentNumber)
    {
        return students.FirstOrDefault(s => s.StudentNumber == studentNumber);
    }

    public List<Student> GetStudentsByCountry(params int[] countryCodes)
    {
        if (countryCodes.Contains(6))
            return students.OrderBy(s => s.Surname).ToList();

        return students.Where(s => countryCodes.Contains(s.CountryCode))
                       .OrderBy(s => s.Surname)
                       .ToList();
    }
}    
    
class Program
{
    static void Main()
    {
        ASEANPhonebook phonebook = new ASEANPhonebook();

        while (true)
        {
            Console.WriteLine("MAIN MENU");
            Console.WriteLine("[1] Store to ASEAN phonebook");
            Console.WriteLine("[2] Edit entry in ASEAN phonebook");
            Console.WriteLine("[3] Search ASEAN phonebook by country");
            Console.WriteLine("[4] Exit");

            Console.Write("Input a valid number given above: ");
            string choice = Console.ReadLine();

            switch (choice)
            {
                case "1":
                    StoreToPhonebook(phonebook);
                    break;
                case "2":
                    EditEntry(phonebook);
                    break;
                case "3":
                    SearchByCountry(phonebook);
                    break;
                case "4":
                    Environment.Exit(0);
                    break;
                default:
                    Console.WriteLine("Invalid number. Please try again.");
                    break;
            }
        }
    }

    static void StoreToPhonebook(ASEANPhonebook phonebook)
{
    do
    {
        Student student = new Student();

        Console.Write("Enter student number: ");
        student.StudentNumber = Console.ReadLine();

        Console.Write("Enter surname: ");
        student.Surname = Console.ReadLine();

        Console.Write("Enter first name: ");
        student.FirstName = Console.ReadLine();

        Console.Write("Enter occupation: ");
        student.Occupation = Console.ReadLine();

        Console.Write("Enter gender (M for male, F for female): ");
        student.Gender = char.ToUpper(Console.ReadKey().KeyChar);
        Console.WriteLine();

        Console.Write("Enter country code: ");
        student.CountryCode = int.Parse(Console.ReadLine());

        Console.Write("Enter area code: ");
        student.AreaCode = int.Parse(Console.ReadLine());

        Console.Write("Enter number: ");
        student.PhoneNumber = Console.ReadLine();

        phonebook.AddStudent(student);

        Console.Write("Do you want to enter another entry [Y/N]? ");
    } while (Console.ReadLine().ToUpper() == "Y");
}

static void EditEntry(ASEANPhonebook phonebook)
{
    Console.Write("Enter student number: ");
    string studentNumber = Console.ReadLine();

    Student student = phonebook.GetStudentByNumber(studentNumber);

    if (student == null)
    {
        Console.WriteLine("Student not found.");
        return;
    }

    Console.WriteLine($"Here is the existing information about {studentNumber}: {student}");

    while (true)
    {
        Console.WriteLine("\nWhich of the following information you want to change?");
        Console.WriteLine("[1] Student number [2] Surname [3] Gender [4] Occupation");
        Console.WriteLine("[5] Country code [6] Area code [7] Phone number [8] Go Back To Main Menu");

        Console.Write("Enter choice: ");
        int choice = int.Parse(Console.ReadLine());

        if (choice == 8)
            break;

        EditInformation(student, choice);
    }
}
static void EditInformation(Student student, int choice)
{
    switch (choice)
    {
        case 1:
            Console.Write("Enter new student number: ");
            student.StudentNumber = Console.ReadLine();
            break;
        case 2:
            Console.Write("Enter new surname: ");
            student.Surname = Console.ReadLine();
            break;
        case 3:
            Console.Write("Enter new gender (M for male, F for female): ");
            student.Gender = char.ToUpper(Console.ReadKey().KeyChar);
            Console.WriteLine();
            break;
        case 4:
            Console.Write("Enter new occupation: ");
            student.Occupation = Console.ReadLine();
            break;
        case 5:
            Console.Write("Enter new country code: ");
            student.CountryCode = int.Parse(Console.ReadLine());
            break;
        case 6:
            Console.Write("Enter new area code: ");
            student.AreaCode = int.Parse(Console.ReadLine());
            break;
        case 7:
            Console.Write("Enter new phone number: ");
            student.PhoneNumber = Console.ReadLine();
            break;
        default:
            Console.WriteLine("Invalid choice. Please try again.");
            break;
    }

    Console.WriteLine($"New Information: {student}");
}
    static int GetCountryCode(int choice)
    {
        switch (choice)
        {
            case 1: return 63; // Republic of the Philippines
            case 2: return 66; // Kingdom of Thailand
            case 3: return 65; // Republic of Singapore
            case 4: return 62; // Republic of Indonesia
            case 5: return 60; // Federation of Malaysia
            default: return 0;
        }
    }
}

